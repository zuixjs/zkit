
Detect tap and swipe gestures over elements.

{% unpre %}
```html
<div self="size-large center">
    <div ctrl z-load="@lib/controllers/gesture-helper"
         z-options="gesture_opts"
         layout="column center-center"
         self="center"
         class="no-select gesture-box">
        <!-- gesture detection area -->
        <div #gesture-xy></div>
        <div #gesture-shift></div>
        <div #gesture layout="row center-center animate__animated">Try me!</div>
    </div>
</div>
<script>
  gesture_opts = {
    passive: false,
    ready: function() {
      let gh = this;
      let view = zuix.$(gh.view());
      let infoXy = zuix.field('gesture-xy');
      let infoShift = zuix.field('gesture-shift');
      let info = zuix.field('gesture');
      view.css('opacity', 1.0);
      // register event callbacks
      gh.on('gesture:touch', function(e, tp) {
        view.addClass('active');
        info.html('touch').playAnimation('animate__flash');
        tp.cancel();
      }).on('gesture:pan', function(e, tp) {
        infoXy.show().html(Math.round(tp.x) + ' ; ' + Math.round(tp.y));
        infoShift.show().html(Math.round(tp.shiftX) + ' ;' + Math.round(tp.shiftY));
        info.html('pan').playAnimation('animate__fadeIn');
      }).on('gesture:release', function(e, tp) {
        view.removeClass('active');
        infoXy.hide();
        infoShift.hide();
      }).on('gesture:tap', function(e, tp) {
        info.html('tap').playAnimation('animate__tada');
      }).on('gesture:swipe', function(e, tp) {
        info.html('swipe <i class="material-icons animate__animated animate__tada">keyboard_arrow_' + tp.direction + '</i> ' + tp.direction);
      });
    }
  };
</script>
<style>
    .gesture-box {
        border: solid 2px rgba(255,255,255,0.5);
        position: relative;
        background: #5f99cf;
        border-radius: 16px;
        width: 70%;
        height: 200px;
        color: white;
        font-size: 160%;
        line-height: 120%;
        margin: 32px 16px 16px;
        font-family: Helvetica, sans-serif;
        cursor: -webkit-grab;
        cursor: -moz-grab;
        cursor: grab;
        -webkit-box-shadow: 0 0 40px -8px rgba(0,0,0,0.75);
        -moz-box-shadow: 0 0 40px -8px rgba(0,0,0,0.75);
        box-shadow: 0 0 40px -8px rgba(0,0,0,0.75);
        opacity: 0.75;
    }
    .gesture-box.active {
        -webkit-box-shadow: 0 0 20px -2px rgba(0,0,0,0.75);
        -moz-box-shadow: 0 0 20px -2px rgba(0,0,0,0.75);
        box-shadow: 0 0 20px -2px rgba(0,0,0,0.75);
        opacity: 1.0;
    }
    [z-field="gesture"] {
        transition: 0.1s ease-out;
    }
    [z-field="gesture"] i {
        font-size: 300%;
        color: lime;
    }
    [z-field="gesture-xy"] {
        position: absolute;
        top: 8px; left: 16px;
        font-size: 50%;
        font-weight: 700;
    }
    [z-field="gesture-shift"] {
        position: absolute;
        top: 8px; right: 16px;
        font-size: 50%;
        font-weight: 700;
    }
</style>
```
{% endunpre %}
